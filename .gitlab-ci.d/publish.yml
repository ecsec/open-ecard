publish-to-github:
  stage: publish
  image: public.docker.ecsec.de/ecsec/tools/podman-java25:1.5
  tags:
    - "podman"
  script:
    # Create Release
    - TAG=$(echo "${CI_COMMIT_TAG}" | cut -c 2-)
    - >-
      RELEASE_ID=$(curl -u ${GITHUB_USERNAME}:${GITHUB_TOKEN} -X POST -v \
        -H "Accept: application/vnd.github+json" \
        -H "X-GitHub-Api-Version: 2022-11-28" \
        https://api.github.com/repos/ecsec/open-ecard/releases \
        -d '{ "tag_name":"'"${CI_COMMIT_TAG}"'", "name":"'"${TAG}"'", "draft":false, "prerelease":false, "generate_release_notes":false }' | jq '.id')

    # # Upload iOS Framework
    # - zip -r OpenEcardPod.zip LICENSE* OpenEcard.xcframework
    # - >-
    #   curl -u ${GITHUB_USERNAME}:${GITHUB_TOKEN} \
    #     -X POST -v \
    #     -H "Accept: application/vnd.github+json" \
    #     -H "X-GitHub-Api-Version: 2022-11-28" \
    #     -H "Content-Type: application/zip" \
    #     --data-binary "@OpenEcardPod.zip" \
    #     https://uploads.github.com/repos/ecsec/open-ecard/releases/${RELEASE_ID}/assets?name=OpenEcard-CocoaPod.zip

    # Upload all installers
    - INSTALLERS=(clients/richclient/build/dist/*)
    - >-
      for INSTALLER in "${INSTALLERS[@]}"; do
        INSTALLER_FILENAME=$(echo "${INSTALLER}" | sed 's:.*/::')
        curl -u ${GITHUB_USERNAME}:${GITHUB_TOKEN} \
          -X POST -v \
          -H "Accept: application/vnd.github+json" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          -H "Content-Type: application/octet-stream" \
          --data-binary "@${INSTALLER}" \
          https://uploads.github.com/repos/ecsec/open-ecard/releases/${RELEASE_ID}/assets?name=${INSTALLER_FILENAME}
      done
    - mkdir build/
    - cd clients/richclient/build/dist/
    - sha256sum * > ../../../../build/artifacts.sha256sum
    - cd -
    - cat build/artifacts.sha256sum
    - ./gradlew buildReleaseInfo -Pversion=$TAG
    - cat build/release-info.jwt
    - >-
      curl -u ${GITHUB_USERNAME}:${GITHUB_TOKEN} \
        -X POST -v \
        -H "Accept: application/vnd.github+json" \
        -H "X-GitHub-Api-Version: 2022-11-28" \
        -H "Content-Type: application/octet-stream" \
        --data-binary "@build/release-info.jwt" \
        https://uploads.github.com/repos/ecsec/open-ecard/releases/${RELEASE_ID}/assets?name=release-info.jwt
  dependencies:
    - "package-linux"
    - "package-osx"
    - "package-win"
    # - "package-ios-framework"
  needs:
    - "compile"
    - "test"
    - "package-linux"
    - "package-osx"
    - "package-win"
    # - "package-ios-framework"
  rules:
    - if: $CI_COMMIT_TAG =~ /^v\d+\.\d+\.\d+(-rc.\d+)?$/

# publish-ios-pod-spec:
#   stage: publish
#   tags:
#     - "mac"
#     - "dev-cert"
#   script:
#     - TAG=$(echo "${CI_COMMIT_TAG}" | cut -c 2-)
#     - echo "Pod::Spec.new do |s|" > open-ecard.podspec
#     - echo "s.name              = 'open-ecard'" >> open-ecard.podspec
#     - echo "s.version           = '${TAG}'" >> open-ecard.podspec
#     - echo "s.summary           = 'ecard framework'" >> open-ecard.podspec
#     - echo "s.description       = 'Open source framework implementing the eCard-API-Framework (BSI-TR-03112) through which arbitrary applications can utilize authentication and signatures with arbitrary chip cards'" >> open-ecard.podspec
#     - echo "s.homepage          = 'https://dev.openecard.org'" >> open-ecard.podspec
#     - echo "s.author            = { 'Name' => 'florian.otto@ecsec.de' }" >> open-ecard.podspec
#     - echo "s.license           = { :type => 'GPLv3', :file => 'LICENSE' }" >> open-ecard.podspec
#     - echo "s.source            = { :http => 'https://github.com/ecsec/open-ecard/releases/download/"${CI_COMMIT_TAG}"/OpenEcard-CocoaPod.zip' }" >> open-ecard.podspec
#     - echo "s.ios.deployment_target = '13.0'" >> open-ecard.podspec
#     - echo "s.ios.vendored_frameworks = 'OpenEcard.xcframework'" >> open-ecard.podspec
#     - echo end >> open-ecard.podspec
#     - pod spec lint open-ecard.podspec --verbose
#     - pod trunk push open-ecard.podspec
#   needs: [ "publish-to-github" ]
#   rules:
#     - if: $CI_COMMIT_TAG =~ /^v\d+\.\d+\.\d+(-rc.\d+)$/
#       when: manual
#     - if: $CI_COMMIT_TAG =~ /^v\d+\.\d+\.\d+$/
