package org.openecard.sc.utils

// values from https://github.com/brookebasile/USB-langids

data class UsbLangId(
	val code: UShort,
) {
	/**
	 * Primary language identifier.
	 * Bits 9-0 (10 bits).
	 */
	val primaryCode: UShort by lazy {
		(code.toUInt() and 0x03FFu).toUShort()
	}

	/**
	 * Sub language identifier.
	 * Bits 15-10 (6 bits).
	 */
	val subCode: UShort by lazy {
		((code.toUInt() shr 10) and 0x3Fu).toUShort()
	}

	val usbLang: UsbLang? by lazy {
		UsbLang.entries.find { it.code == code }
	}

	val usbPrimaryLang: UsbPrimaryLang? by lazy {
		UsbPrimaryLang.entries.find { it.code == primaryCode }
	}

	val usbSubLang: UsbSubLang? by lazy {
		UsbSubLang.entries.find { it.code == subCode }
	}
}

enum class UsbLang(
	val code: UShort,
	val langName: String,
) {
	AFRIKAANS(0x0436u, "Afrikaans"),
	ALBANIAN(0x041cu, "Albanian"),
	ARABIC_SAUDI_ARABIA(0x0401u, "Arabic (Saudi Arabia)"),
	ARABIC_IRAQ(0x0801u, "Arabic (Iraq)"),
	ARABIC_EGYPT(0x0c01u, "Arabic (Egypt)"),
	ARABIC_LIBYA(0x1001u, "Arabic (Libya)"),
	ARABIC_ALGERIA(0x1401u, "Arabic (Algeria)"),
	ARABIC_MOROCCO(0x1801u, "Arabic (Morocco)"),
	ARABIC_TUNISIA(0x1c01u, "Arabic (Tunisia)"),
	ARABIC_OMAN(0x2001u, "Arabic (Oman)"),
	ARABIC_YEMEN(0x2401u, "Arabic (Yemen)"),
	ARABIC_SYRIA(0x2801u, "Arabic (Syria)"),
	ARABIC_JORDAN(0x2c01u, "Arabic (Jordan)"),
	ARABIC_LEBANON(0x3001u, "Arabic (Lebanon)"),
	ARABIC_KUWAIT(0x3401u, "Arabic (Kuwait)"),
	ARABIC_U_A_E(0x3801u, "Arabic (U.A.E.)"),
	ARABIC_BAHRAIN(0x3c01u, "Arabic (Bahrain)"),
	ARABIC_QATAR(0x4001u, "Arabic (Qatar)"),
	ARMENIAN(0x042bu, "Armenian"),
	ASSAMESE(0x044du, "Assamese"),
	AZERI_LATIN(0x042cu, "Azeri (Latin)"),
	AZERI_CYRILLIC(0x082cu, "Azeri (Cyrillic)"),
	BASQUE(0x042du, "Basque"),
	BELARUSSIAN(0x0423u, "Belarussian"),
	BENGALI(0x0445u, "Bengali"),
	BULGARIAN(0x0402u, "Bulgarian"),
	BURMESE(0x0455u, "Burmese"),
	CATALAN(0x0403u, "Catalan"),
	CHINESE_TAIWAN(0x0404u, "Chinese (Taiwan)"),
	CHINESE_PRC(0x0804u, "Chinese (PRC)"),
	CHINESE_HONG_KONG(0x0c04u, "Chinese (Hong Kong SAR, PRC)"),
	CHINESE_SINGAPORE(0x1004u, "Chinese (Singapore)"),
	CHINESE_MACAU(0x1404u, "Chinese (Macau SAR)"),
	CROATIAN(0x041au, "Croatian"),
	CZECH(0x0405u, "Czech"),
	DANISH(0x0406u, "Danish"),
	DUTCH_NETHERLANDS(0x0413u, "Dutch (Netherlands)"),
	DUTCH_BELGIUM(0x0813u, "Dutch (Belgium)"),
	ENGLISH_UNITED_STATES(0x0409u, "English (United States)"),
	ENGLISH_UNITED_KINGDOM(0x0809u, "English (United Kingdom)"),
	ENGLISH_AUSTRALIAN(0x0c09u, "English (Australian)"),
	ENGLISH_CANADIAN(0x1009u, "English (Canadian)"),
	ENGLISH_NEW_ZEALAND(0x1409u, "English (New Zealand)"),
	ENGLISH_IRELAND(0x1809u, "English (Ireland)"),
	ENGLISH_SOUTH_AFRICA(0x1c09u, "English (South Africa)"),
	ENGLISH_JAMAICA(0x2009u, "English (Jamaica)"),
	ENGLISH_CARIBBEAN(0x2409u, "English (Caribbean)"),
	ENGLISH_BELIZE(0x2809u, "English (Belize)"),
	ENGLISH_TRINIDAD(0x2c09u, "English (Trinidad)"),
	ENGLISH_ZIMBABWE(0x3009u, "English (Zimbabwe)"),
	ENGLISH_PHILIPPINES(0x3409u, "English (Philippines)"),
	ESTONIAN(0x0425u, "Estonian"),
	FAEROESE(0x0438u, "Faeroese"),
	FARSI(0x0429u, "Farsi"),
	FINNISH(0x040bu, "Finnish"),
	FRENCH_STANDARD(0x040cu, "French (Standard)"),
	FRENCH_BELGIAN(0x080cu, "French (Belgian)"),
	FRENCH_CANADIAN(0x0c0cu, "French (Canadian)"),
	FRENCH_SWITZERLAND(0x100cu, "French (Switzerland)"),
	FRENCH_LUXEMBOURG(0x140cu, "French (Luxembourg)"),
	FRENCH_MONACO(0x180cu, "French (Monaco)"),
	GEORGIAN(0x0437u, "Georgian"),
	GERMAN_STANDARD(0x0407u, "German (Standard)"),
	GERMAN_SWITZERLAND(0x0807u, "German (Switzerland)"),
	GERMAN_AUSTRIA(0x0c07u, "German (Austria)"),
	GERMAN_LUXEMBOURG(0x1007u, "German (Luxembourg)"),
	GERMAN_LIECHTENSTEIN(0x1407u, "German (Liechtenstein)"),
	GREEK(0x0408u, "Greek"),
	GUJARATI(0x0447u, "Gujarati"),
	HEBREW(0x040du, "Hebrew"),
	HINDI(0x0439u, "Hindi"),
	HUNGARIAN(0x040eu, "Hungarian"),
	ICELANDIC(0x040fu, "Icelandic"),
	INDONESIAN(0x0421u, "Indonesian"),
	ITALIAN_STANDARD(0x0410u, "Italian (Standard)"),
	ITALIAN_SWITZERLAND(0x0810u, "Italian (Switzerland)"),
	JAPANESE(0x0411u, "Japanese"),
	KANNADA(0x044bu, "Kannada"),
	KASHMIRI_INDIA(0x0860u, "Kashmiri (India)"),
	KAZAKH(0x043fu, "Kazakh"),
	KONKANI(0x0457u, "Konkani"),
	KOREAN(0x0412u, "Korean"),
	KOREAN_JOHAB(0x0812u, "Korean (Johab)"),
	LATVIAN(0x0426u, "Latvian"),
	LITHUANIAN(0x0427u, "Lithuanian"),
	LITHUANIAN_CLASSIC(0x0827u, "Lithuanian (Classic)"),
	MACEDONIAN(0x042fu, "Macedonian"),
	MALAY_MALAYSIAN(0x043eu, "Malay (Malaysian)"),
	MALAY_BRUNEI_DARUSSALAM(0x083eu, "Malay (Brunei Darussalam)"),
	MALAYALAM(0x044cu, "Malayalam"),
	MANIPURI(0x0458u, "Manipuri"),
	MARATHI(0x044eu, "Marathi"),
	NEPALI_INDIA(0x0861u, "Nepali (India)"),
	NORWEGIAN_BOKMAL(0x0414u, "Norwegian (Bokmal)"),
	NORWEGIAN_NYNORSK(0x0814u, "Norwegian (Nynorsk)"),
	ORIYA(0x0448u, "Oriya"),
	POLISH(0x0415u, "Polish"),
	PORTUGUESE_BRAZIL(0x0416u, "Portuguese (Brazil)"),
	PORTUGUESE_STANDARD(0x0816u, "Portuguese (Standard)"),
	PUNJABI(0x0446u, "Punjabi"),
	ROMANIAN(0x0418u, "Romanian"),
	RUSSIAN(0x0419u, "Russian"),
	SANSKRIT(0x044fu, "Sanskrit"),
	SERBIAN_CYRILLIC(0x0c1au, "Serbian (Cyrillic)"),
	SERBIAN_LATIN(0x081au, "Serbian (Latin)"),
	SINDHI(0x0459u, "Sindhi"),
	SLOVAK(0x041bu, "Slovak"),
	SLOVENIAN(0x0424u, "Slovenian"),
	SPANISH_TRADITIONAL_SORT(0x040au, "Spanish (Traditional Sort)"),
	SPANISH_MEXICAN(0x080au, "Spanish (Mexican)"),
	SPANISH_MODERN_SORT(0x0c0au, "Spanish (Modern Sort)"),
	SPANISH_GUATEMALA(0x100au, "Spanish (Guatemala)"),
	SPANISH_COSTA_RICA(0x140au, "Spanish (Costa Rica)"),
	SPANISH_PANAMA(0x180au, "Spanish (Panama)"),
	SPANISH_DOMINICAN_REPUBLIC(0x1c0au, "Spanish (Dominican Republic)"),
	SPANISH_VENEZUELA(0x200au, "Spanish (Venezuela)"),
	SPANISH_COLOMBIA(0x240au, "Spanish (Colombia)"),
	SPANISH_PERU(0x280au, "Spanish (Peru)"),
	SPANISH_ARGENTINA(0x2c0au, "Spanish (Argentina)"),
	SPANISH_ECUADOR(0x300au, "Spanish (Ecuador)"),
	SPANISH_CHILE(0x340au, "Spanish (Chile)"),
	SPANISH_URUGUAY(0x380au, "Spanish (Uruguay)"),
	SPANISH_PARAGUAY(0x3c0au, "Spanish (Paraguay)"),
	SPANISH_BOLIVIA(0x400au, "Spanish (Bolivia)"),
	SPANISH_EL_SALVADOR(0x440au, "Spanish (El Salvador)"),
	SPANISH_HONDURAS(0x480au, "Spanish (Honduras)"),
	SPANISH_NICARAGUA(0x4c0au, "Spanish (Nicaragua)"),
	SPANISH_PUERTO_RICO(0x500au, "Spanish (Puerto Rico)"),
	SUTU(0x0430u, "Sutu"),
	SWAHILI_KENYA(0x0441u, "Swahili (Kenya)"),
	SWEDISH(0x041du, "Swedish"),
	SWEDISH_FINLAND(0x081du, "Swedish (Finland)"),
	TAMIL(0x0449u, "Tamil"),
	TATAR_TATARSTAN(0x0444u, "Tatar (Tatarstan)"),
	TELUGU(0x044au, "Telugu"),
	THAI(0x041eu, "Thai"),
	TURKISH(0x041fu, "Turkish"),
	UKRAINIAN(0x0422u, "Ukrainian"),
	URDU_PAKISTAN(0x0420u, "Urdu (Pakistan)"),
	URDU_INDIA(0x0820u, "Urdu (India)"),
	UZBEK_LATIN(0x0443u, "Uzbek (Latin)"),
	UZBEK_CYRILLIC(0x0843u, "Uzbek (Cyrillic)"),
	VIETNAMESE(0x042au, "Vietnamese"),
	HID_USAGE_DATA_DESCRIPTOR(0x04ffu, "HID (Usage Data Descriptor)"),
	HID_VENDOR_DEFINED_1(0xf0ffu, "HID (Vendor Defined 1)"),
	HID_VENDOR_DEFINED_2(0xf4ffu, "HID (Vendor Defined 2)"),
	HID_VENDOR_DEFINED_3(0xf8ffu, "HID (Vendor Defined 3)"),
	HID_VENDOR_DEFINED_4(0xfcffu, "HID (Vendor Defined 4)"),
}

enum class UsbPrimaryLang(
	val code: UShort,
	val langName: String,
) {
	ARABIC(0x01u, "Arabic"),
	BULGARIAN(0x02u, "Bulgarian"),
	CATALAN(0x03u, "Catalan"),
	CHINESE(0x04u, "Chinese"),
	CZECH(0x05u, "Czech"),
	DANISH(0x06u, "Danish"),
	GERMAN(0x07u, "German"),
	GREEK(0x08u, "Greek"),
	ENGLISH(0x09u, "English"),
	SPANISH(0x0au, "Spanish"),
	FINNISH(0x0bu, "Finnish"),
	FRENCH(0x0cu, "French"),
	HEBREW(0x0du, "Hebrew"),
	HUNGARIAN(0x0eu, "Hungarian"),
	ICELANDIC(0x0fu, "Icelandic"),
	ITALIAN(0x10u, "Italian"),
	JAPANESE(0x11u, "Japanese"),
	KOREAN(0x12u, "Korean"),
	DUTCH(0x13u, "Dutch"),
	NORWEGIAN(0x14u, "Norwegian"),
	POLISH(0x15u, "Polish"),
	PORTUGUESE(0x16u, "Portuguese"),
	ROMANIAN(0x18u, "Romanian"),
	RUSSIAN(0x19u, "Russian"),
	CROATIAN(0x1au, "Croatian"),
	SERBIAN(0x1au, "Serbian"),
	SLOVAK(0x1bu, "Slovak"),
	ALBANIAN(0x1cu, "Albanian"),
	SWEDISH(0x1du, "Swedish"),
	THAI(0x1eu, "Thai"),
	TURKISH(0x1fu, "Turkish"),
	URDU(0x20u, "Urdu"),
	INDONESIAN(0x21u, "Indonesian"),
	UKRANIAN(0x22u, "Ukrainian"),
	BELARUSIAN(0x23u, "Belarusian"),
	SLOVENIAN(0x24u, "Slovenian"),
	ESTONIAN(0x25u, "Estonian"),
	LATVIAN(0x26u, "Latvian"),
	LITHUANIAN(0x27u, "Lithuanian"),
	FARSI(0x29u, "Farsi"),
	VIETNAMESE(0x2au, "Vietnamese"),
	ARMENIAN(0x2bu, "Armenian"),
	AZERI(0x2cu, "Azeri"),
	BASQUE(0x2du, "Basque"),
	MACEDONIAN(0x2fu, "Macedonian"),
	AFRIKAANS(0x36u, "Afrikaans"),
	GEORGIAN(0x37u, "Georgian"),
	FAEROESE(0x38u, "Faeroese"),
	HINDI(0x39u, "Hindi"),
	MALAY(0x3eu, "Malay"),
	KAZAK(0x3fu, "Kazak"),
	SWAHILI(0x41u, "Swahili"),
	UZBEK(0x43u, "Uzbek"),
	TATAR(0x44u, "Tatar"),
	BENGALI(0x45u, "Bengali"),
	PUNJABI(0x46u, "Punjabi"),
	GUJARATI(0x47u, "Gujarati"),
	ORIYA(0x48u, "Oriya"),
	TAMIL(0x49u, "Tamil"),
	TELUGU(0x4au, "Telugu"),
	KANNADA(0x4bu, "Kannada"),
	MALAYALAM(0x4cu, "Malayalam"),
	ASSAMESE(0x4du, "Assamese"),
	MARATHI(0x4eu, "Marathi"),
	SANSKRIT(0x4fu, "Sanskrit"),
	KONKANI(0x57u, "Konkani"),
	MANIPURI(0x58u, "Manipuri"),
	SINDHI(0x59u, "Sindhi"),
	KASHMIRI(0x60u, "Kashmiri"),
	NEPALI(0x61u, "Nepali"),
	HID(0xffu, "Reserved for USB HID Class use"),
}

enum class UsbSubLang(
	val code: UShort,
	val langName: String,
) {
	ARABIC_SAUDI_ARABIA(0x01u, "Arabic (Saudi Arabia)"),
	ARABIC_IRAQ(0x02u, "Arabic (Iraq)"),
	ARABIC_EGYPT(0x03u, "Arabic (Egypt)"),
	ARABIC_LIBYA(0x04u, "Arabic (Libya)"),
	ARABIC_ALGERIA(0x05u, "Arabic (Algeria)"),
	ARABIC_MOROCCO(0x06u, "Arabic (Morocco)"),
	ARABIC_TUNISIA(0x07u, "Arabic (Tunisia)"),
	ARABIC_OMAN(0x08u, "Arabic (Oman)"),
	ARABIC_YEMEN(0x09u, "Arabic (Yemen)"),
	ARABIC_SYRIA(0x10u, "Arabic (Syria)"),
	ARABIC_JORDAN(0x11u, "Arabic (Jordan)"),
	ARABIC_LEBANON(0x12u, "Arabic (Lebanon)"),
	ARABIC_KUWAIT(0x13u, "Arabic (Kuwait)"),
	ARABIC_UAE(0x14u, "Arabic (U.A.E.)"),
	ARABIC_BAHRAIN(0x15u, "Arabic (Bahrain)"),
	ARABIC_QATAR(0x16u, "Arabic (Qatar)"),
	AZERI_CYRILLIC(0x01u, "Azeri (Cyrillic)"),
	AZERI_LATIN(0x02u, "Azeri (Latin)"),
	CHINESE_TRADITIONAL(0x01u, "Chinese (Traditional)"),
	CHINESE_SIMPLIFIED(0x02u, "Chinese (Simplified)"),
	CHINESE_HONGKONG(0x03u, "Chinese (Hong Kong SAR, PRC)"),
	CHINESE_SINGAPORE(0x04u, "Chinese (Singapore)"),
	CHINESE_MACAU(0x05u, "Chinese (Macau SAR)"),
	DUTCH(0x01u, "Dutch"),
	DUTCH_BELGIAN(0x02u, "Dutch (Belgian)"),
	ENGLISH_US(0x01u, "English (US)"),
	ENGLISH_UK(0x02u, "English (UK)"),
	ENGLISH_AUS(0x03u, "English (Australian)"),
	ENGLISH_CAN(0x04u, "English (Canadian)"),
	ENGLISH_NZ(0x05u, "English (New Zealand)"),
	ENGLISH_EIRE(0x06u, "English (Ireland)"),
	ENGLISH_SOUTH_AFRICA(0x07u, "English (South Africa)"),
	ENGLISH_JAMAICA(0x08u, "English (Jamaica)"),
	ENGLISH_CARIBBEAN(0x09u, "English (Caribbean)"),
	ENGLISH_BELIZE(0x0au, "English (Belize)"),
	ENGLISH_TRINIDAD(0x0bu, "English (Trinidad)"),
	ENGLISH_PHILIPPINES(0x0cu, "English (Zimbabwe)"),
	ENGLISH_ZIMBABWE(0x0du, "English (Philippines)"),
	FRENCH(0x01u, "French"),
	FRENCH_BELGIAN(0x02u, "French (Belgian)"),
	FRENCH_CANADIAN(0x03u, "French (Canadian)"),
	FRENCH_SWISS(0x04u, "French (Swiss)"),
	FRENCH_LUXEMBOURG(0x05u, "French (Luxembourg)"),
	FRENCH_MONACO(0x06u, "French (Monaco)"),
	GERMAN(0x01u, "German"),
	GERMAN_SWISS(0x02u, "German (Swiss)"),
	GERMAN_AUSTRIAN(0x03u, "German (Austrian)"),
	GERMAN_LUXEMBOURG(0x04u, "German (Luxembourg)"),
	GERMAN_LIECHTENSTEIN(0x05u, "German (Liechtenstein)"),
	ITALIAN(0x01u, "Italian"),
	ITALIAN_SWISS(0x02u, "Italian (Swiss)"),
	KASHMIRI_INDIA(0x02u, "Kashmiri (India)"),
	KOREAN(0x01u, "Korean"),
	LITHUANIAN(0x01u, "Lithuanian"),
	MALAY_MALAYSIA(0x01u, "Malay (Malaysia)"),
	MALAY_BRUNEI_DARUSSALAM(0x02u, "Malay (Brunei Darassalam)"),
	NEPALI_INDIA(0x02u, "Nepali (India)"),
	NORWEGIAN_BOKMAL(0x01u, "Norwegian (Bokmal)"),
	NORWEGIAN_NYNORSK(0x02u, "Norwegian (Nynorsk)"),
	PORTUGUESE(0x01u, "Portuguese (Brazilian)"),
	PORTUGUESE_BRAZILIAN(0x02u, "Portuguese"),
	SERBIAN_LATIN(0x02u, "Serbian (Latin)"),
	SERBIAN_CYRILLIC(0x03u, "Serbian (Cyrillic)"),
	SPANISH(0x01u, "Spanish (Castilian)"),
	SPANISH_MEXICAN(0x02u, "Spanish (Mexican)"),
	SPANISH_MODERN(0x03u, "Spanish (Modern)"),
	SPANISH_GUATEMALA(0x04u, "Spanish (Guatemala)"),
	SPANISH_COSTA_RICA(0x05u, "Spanish (Costa Rica)"),
	SPANISH_PANAMA(0x06u, "Spanish (Panama)"),
	SPANISH_DOMINICAN_REPUBLIC(0x07u, "Spanish (Dominican Republic)"),
	SPANISH_VENEZUELA(0x08u, "Spanish (Venezuela)"),
	SPANISH_COLOMBIA(0x09u, "Spanish (Colombia)"),
	SPANISH_PERU(0x0au, "Spanish (Peru)"),
	SPANISH_ARGENTINA(0x0bu, "Spanish (Argentina)"),
	SPANISH_ECUADOR(0x0cu, "Spanish (Ecuador)"),
	SPANISH_CHILE(0x0du, "Spanish (Chile)"),
	SPANISH_URUGUAY(0x0eu, "Spanish (Uruguay)"),
	SPANISH_PARAGUAY(0x0fu, "Spanish (Paraguay)"),
	SPANISH_BOLIVIA(0x10u, "Spanish (Bolivia)"),
	SPANISH_EL_SALVADOR(0x11u, "Spanish (El Salvador)"),
	SPANISH_HONDURAS(0x12u, "Spanish (Honduras)"),
	SPANISH_NICARAGUA(0x13u, "Spanish (Nicaragua)"),
	SPANISH_PUERTO_RICO(0x14u, "Spanish (Puerto Rico)"),
	SWEDISH(0x01u, "Swedish"),
	SWEDISH_FINLAND(0x02u, "Swedish (Finland)"),
	URDU_PAKISTAN(0x01u, "Urdu (Pakistan)"),
	URDU_INDIA(0x02u, "Urdu (India)"),
	UZBEK_LATIN(0x01u, "Uzbek (Latin)"),
	UZBEK_CYRILLIC(0x02u, "Uzbek (Cyrillic)"),
	HID_USAGE_DATA_DESCRIPTOR(0x01u, "HID (Usage Data Descriptor)"),
	HID_VENDOR_DEFINED_1(0x3cu, "HID (Vendor Defined 1)"),
	HID_VENDOR_DEFINED_2(0x3du, "HID (Vendor Defined 2)"),
	HID_VENDOR_DEFINED_3(0x3eu, "HID (Vendor Defined 3)"),
	HID_VENDOR_DEFINED_4(0x3fu, "HID (Vendor Defined 4)"),
}
